<!DOCTYPE HTML>
<html lang="en">
  <head>
    <title>Summary of changes in STIR release 6.1</title>
  </head>

  <body>
    <h1>Summary of changes in STIR release 6.1</h1>

<p>This version is 95% backwards compatible with STIR 6.0 for the user (see below).
Developers might need to make code changes as 
detailed below.
</p>
<h2>Overall summary</h2>
<p>
</p>


<p>Of course, there is also the usual code-cleanup and 
improvements to the documentation.
</p>

<p>This release contains mainly code written by Kris Thielemans (UCL).
</p>

<h2>Patch release info</h2>
<ul>
  <li>
    6.1.0 released ?/?/2020<br>
    <a href="https://github.com/UCL/STIR/milestone/4">GitHub Milestone 6.0</a>
  </li>
  <!--
      <li> 4.0.1 released 28/04/2020
        <ul>
          <li><a href=https://github.com/UCL/STIR/pull/513>PR 513</a>  (suppress warnings with clang)</li>
        </ul>
        -->
</ul>

<h2> Summary for end users (also to be read by developers)</h2>

<h3>Changes breaking backwards compatibility from a user-perspective</h3>
<h4>General</h4>
<h4>Python (and MATLAB)</h4>

<ul>
  <li> </li>
</ul>


<h3>New functionality</h3>
<ul>
<li>
  Add TOF capability of the parallelproj projector (see <a href=https://github.com/UCL/STIR/pull/1356>PR #1356</a>)
</li>
<li>
  Read TOF bin order from interfile header (see <a href=https://github.com/UCL/STIR/pull/1389> PR #1389</a>)
</li>
<li>
  <code>PoissonLogLikelihoodWithLinearModelForMeanAndListModeDataWithProjMatrixByBin</code> can now compute the value
  as well as <code>accumulate_Hessian_times_input</code>.
  <br>
  <a href=https://github.com/UCL/STIR/pull/1418> PR #1418</a>
</li>
<li>
  <code>GeneralisedObjectiveFunction</code> has 2 new members to compute the full gradient
  (<code>compute_gradient</code> and <code>compute_gradient_without_penalty</code>). Previously,
  only subset gradients were available.
  <br>
  <a href=https://github.com/UCL/STIR/pull/1418> PR #1418</a>
</li>
</ul>


<h3>Changed functionality</h3>
<ul>
  <li>
    <code>PoissonLogLikelihoodWithLinearModelForMeanAndListModeDataWithProjMatrixByBin</code> now computes the gradient
    multi-threaded (if OpenMP is enabled), even if caching to file of the list-mode file is not enabled.
    <br>
    <a href=https://github.com/UCL/STIR/pull/1418> PR #1418</a>
  </li>
  <li>
    Accumulation in computation of priors now uses doubles, which could result in slightly better precision. <a href=https://github.com/UCL/STIR/pull/1410>Part of PR #1410</a>.
  </li>
</ul>


<h3>Bug fixes</h3>
<ul>
  <li>The Relative Difference Prior gave incorrect results, probably since switching to C++-14 in version 6.0, although we are not sure.
    See <a href=https://github.com/UCL/STIR/pull/1410>PR #1410</a> and associated <a href=https://github.com/UCL/STIR/pull/1409>issue #1409</a>.
  </li>
  <li>
      Our checks for determining system byte-order were out-of-date and in particular did not work on MacOS 14 on ARM.
      We now use CMake's <code>CMAKE_CXX_BYTE_ORDER</code> (available since CMake 3.20).
      See <a href=https://github.com/UCL/STIR/pull/1412>PR #1412</a>.
  </li>
</ul>

<h3>Known problems</h3>
    <p>See <a href=https://github.com/UCL/STIR/labels/bug>our issue tracker</a>.</p>


<h3>Documentation changes</h3>
<ul>
<li>Added documentation on new features</li> 
<li>Also check the wiki in addition to the provided PDFs.
</li>
 </ul>

<H2>What's new for developers (aside from what should be obvious
from the above):</H2>

<h3>Backward incompatibities</h3>
<ul>
    <li>
        Additional checks on <code>GeometryBlocksOnCylindrical</code> scanner configuration, which may lead to an
        error being raised, while previously the code silently proceeded.
    </li>
</ul>

<h3>New functionality</h3>
<ul>
<li>
</li>
</ul>


<h3>Other code changes</h3>
<ul>
<li>
</li>
</ul>

<h3>Build system</h3>
<ul>
<li>
</li>
</ul>

<h3>Test changes</h3>
<h4>recon_test_pack changes</h4>
<ul>
  <li>
    updated version number and added some clarification to the README.txt
  </li>
</ul>

<h4>C++ tests</h4>
<ul>
  <li>
    objective function and priors now have a numerical test for <code>accumulate_Hessian_times_input</code>
    <br>
    <a href=https://github.com/UCL/STIR/pull/1418> PR #1418</a>
  </li>
</ul>

</body>

</html>
