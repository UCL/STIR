<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <title>Summary of changes in STIR release 5.1</title>
  </head>

  <body>
    <h1>Summary of changes in STIR release 5.1</h1>

<p>This version is 100% backwards compatible with STIR 5.0.
</p>
<h2>Overall summary</h2>
<p>
<ul>
<li>This release includes the first open-source code available for reconstructing pinhole-SPECT datasets (see <a href="https://github.com/UCL/STIR/pull/1100/">PR #1100</a>). It contains code by Carl&eacute;s Falc&oacute;n (Neuroimaging Group, Barcelona&#946;eta Brain Research Center) to create the pinhole-SPECT system matrix. Integration into STIR was completed by Matthew Strugari (Dalhousie University) and Kris Thielemans (UCL). This work is reported in
    <ul>
    <li>Matthew Strugari, Carles Falcon, Kjell Erlandsson, Brian Hutton, G. Andrew Reid, Ian Pottie, Sultan Darvesh, Steven Beyea, Kimberly Brewer, Kris Thielemans, <br />
    <i><cite>Integration of advanced 3D SPECT modelling for pinhole collimators into the open-source STIR framework</cite></i>, <br />
    Proc. IEEE MIC 2022, Milan, Italy
    </li></ul></li>
  <li>Improvements to listmode reconstruction by Nikos Efthimiou, see <a href="https://github.com/UCL/STIR/pull/1030/">PR #1030</a>. 
  </li>    
  <li>Support for PENNPET Explorer listmode data (if proprietary libraries are found) by Nikos Efthimiou, see <a href="https://github.com/UCL/STIR/pull/1028/">PR #1028</a>. 
  </li> 
  <li>Scatter simulation, estimation and down/up-sampling, randoms handling and ML normalisation estimation
    adapted for scanner with Block geometry by Daniel Deidda (NPL) and Kris Thielemans (UCL). 
  </li>
  <li>Various small changes to add functionality to Python interface, mainly by Markus Jehl (Positrigo).
  </li>
  <li>Python projection data visualiser (in <tt>examples/python</tt>) by Robert Twyman (UCL).
  </li>
</ul>
</p>

<p>Of course, there is also the usual code-cleanup and 
improvements to the documentation.
</p>
<p>Overall code management and assistance by Kris Thielemans (UCL and ASC).</p>

<h2>Patch release info</h2>
<ul>
  <li> 5.1.0 released ??/05/2022</li>    
</ul>

<h2> Summary for end users (also to be read by developers)</h2>

<h3>Bug fixes</h3>
<ul>
  <li>Fix of <code>find_LOR_intersections_with_cylinder</code> functions in the LOR hierarchy. This fixes the use of the <tt>parallelproj</tt> projector for non-cylindrical geometries. See <a href="https://github.com/UCL/STIR/pull/1072/">PR #1072</a>
    and <a href="https://github.com/UCL/STIR/pull/1074/">PR #1074</a>.
  </li>
</ul>

<h3>New functionality</h3>
<ul>
  <li>New projection matrix for pinhole-SPECT (called <code>PinholeSPECTUB</code>) supporting cylindrical or polygonal pinhole collimators with circular orbits.
  Corrections include attenuation modelling, intrinsic PSF, and depth of interaction (DOI). DOI corrections currently have a bug. See <a href="https://github.com/UCL/STIR/pull/1100/">PR #1100</a>.
  </li>
  <li>Improvements to listmode reconstruction by Nikos Efthimiou, see <a href="https://github.com/UCL/STIR/pull/1030/">PR #1030</a>. 
  </li>    
  <li>Support for PENNPET Explorer listmode data (if proprietary libraries are found) by Nikos Efthimiou, see <a href="https://github.com/UCL/STIR/pull/1028/">PR #1028</a>. 
  </li>    
  <li> Improvements to penalty functions including Hessian methods, see <a href="https://github.com/UCL/STIR/pull/901/">PR #901</a>.
  </li>
  <li>Added <code>write_to_file(fname)</code> method to python <code>VoxelsOnCartesianGrid</code> objects and updated <code>recon_demo.py</code> as a demonstration.
  </li>
  <li>Added a constructor to <code>CListModeDataSAFIR</code> to read data programmatically.
  </li>
  <li>Added the option to set output proj data on <code>LmToProjData</code> to read data programmatically.
      This will fill the proj data object only with the listmode data in the last frame that is defined.
  </li>
  <li>Added the option to set the radius on <code>TruncateToCylindricalFOVImageProcessor</code>.
  </li>
  <li><code>LmToProjData</code> is now filtering out coincidences in the same detector number of different rings. These were previously
      all added to the central bin of the first view, if not removed from the listmode file prior to reading.
  </li>
  <li>Added the option to set slope and intercepts on <code>HUToMuImageProcessor</code> programmatically,
      to not have to rely on JSON.
  </li>
  <li>Code refactoring for the Maximum Likelihood functions, including creation of a new (intermediate) class
    <code>BinNormalisationPETFromComponents</code>, see <a href="https://github.com/UCL/STIR/pull/1079/">PR #1079</a>.
  </li>
  <li>Clean-up of <code>multiply_crystal_factors</code> to rely on existing functionality, therefore reducing code overlap
    and increasing generalisibility, see <a href="https://github.com/UCL/STIR/pull/1075/">PR #1075</a>.
  </li>
  <li>Adapting randoms handling and ML normalisation estimation via template to handle BlocksOnCylindrical
    data as well, , see <a href="https://github.com/UCL/STIR/pull/1085/">PR #1085</a>.
  </li>
  <li>Backwards incompatible change to <code>SAFIRCListmodeInputFileFormat</code> to support a small variation of the SAFIR format for 
    the NeuroLF brain PET scanner, see <a href="https://github.com/UCL/STIR/pull/1106/">PR #1106</a>.
  </li>
</ul>

<h3>New examples</h3>
<ul>
  <li>Added sample files for PinholeSPECTUB configurations.</li>
</ul>
<h4>Python</h4>
<ul>
  <li>PyQt5 projection data  visualisation  <a href="https://github.com/UCL/STIR/pull/1059/">(PR #1059)</a><br />
    Currently added as a Python example. Includes a brief README on how to launch from command line and how to use from within Python
  </li>
</ul>

<h3>Changed functionality</h3>


<h3>Build system</h3>
<ul>
    <li>
      ROOT versions until v6.24 supported C++11, subsequent versions require at least C++14.
      If ROOT v6.24 or later is detected, STIR will now use a minimum of C++14,
      see <a href="https://github.com/UCL/STIR/pull/1068/">PR #1068</a>.
    </li>
</ul>


<h3>Known problems</h3>
<ul>
<li>See <a href=https://github.com/UCL/STIR/labels/bug>our issue tracker</a>.</li>
<li>PinholeSPECT related
<ul>
  <li>There is currently a bug associated with the DOI correction at small angles from the pinhole axis.</li>
  <li>The quantitative scale of reconstructed SPECT images is generally different than for PET reconstructions.
    It behaves differently than the PET projectors when using different voxel sizes.</li>
  <li><tt>list_projdata_info</tt> still reports SPECT data as if it's a PET scanner, but you can see
    all necessary geometric info from it anyway.</li>
  <li><tt>create_projdata_template</tt> only works for PET scanners. For SPECT, you could take the 
   sample Interfile header, modify it to your needs (and create an empty file for the binary data pointed to
   by the Interfile header).
  </li>
  </ul>
</li>
</ul>


<h3>Minor (?) bug fixes</h3>
<ul>
  <li>Made <code>ProjDataInfo*::get_all_det_pos_pairs_for_bin</code> thread-safe.
    See <a href="https://github.com/UCL/STIR/pull/1084/">PR #1084</a>.</li>
</ul>

<h3>Documentation changes</h3>
<ul>
  <li>Added PinholeSPECTUB documentation to STIR-UsersGuide.</li>
</ul>

<h3>recon_test_pack changes</h3>
<ul>
  <li>Added PinholeSPECTUB tests to SPECT directory and updated <tt>run_SPECT_tests.sh</tt> script to call SPECTUB and PinholeSPECTUB tests from separate subdirectories.</li>
</ul>

<h3>Other changes to tests</h3>
<ul>
  <li> Significant changes made to <code>test_priors</code> that tests the Hessian's convexity, given
    <code>x(Hx) > 0</code>, and a perturbation response, using gradients, was added to determine the Hessian
    (for a single densel) is within tolerance.
    Tests the Quadratic, Relative Difference (in two configurations) and Log-Cosh Penalties (Robert Twyman, UCL).
  </li>
</ul>
</body>

</html>
