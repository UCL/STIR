<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
  <head>
    <title>Summary of changes in STIR release 4.1</title>
  </head>

  <body>
    <h1>Summary of changes in STIR release 4.1</h1>
<h2>Overall summary</h2>

    <p>
    </p>
    
    <p>This release contains mainly code written by
      <ul>
        <li>Kris Thielemans (UCL) for general overview, fixes, help and maintenance</li>
        <li>Palak Wadhwa (Leeds) addition of support for GE Signa PET/MR, with help from many others, including
          coding by Ottavia Bertolli (UCL), Nikos Efthimiou (Hull), Elise Emond (UCL) and Kris Thielemans (UCL),
          and supervision by Ch. Tsoumpas (Leeds). This work received help from GE Healthcare with particular thanks to
          Gaspar Delso, Kristen Wangerin and Floris Jansen. See the following publication for more details<br />
          Palak Wadwha et al.<br />
          <cite>PET Image Reconstruction Using Physical and Mathematical Modelling For Time of Flight PET-MR Scanners in the STIR Library</cite><br />
          Methods 2020,
          DOI: <a href=https://doi.org/10.1016/j.ymeth.2020.01.005>10.1016/j.ymeth.2020.01.005</a>
        </li>
        <li>Ander Biguri (UCL) for extending the Signa support to GE PET/CT scanners using RDF9</li>
        <li>Richard Brown (UCL) for wrapping of NiftyPET's GPU functionality for projecting and unlisting</li>
        <li>Robert Twyman (UCL) for Relative Difference Prior, computation of the log-likelihood modification, and GATE geometry check fixes. </li>  
        <li>Gemma Fardell (UKRI) for implementing <code>xapyb</code> and <code>sapyb</code> array methods. </li>  
      </ul>
    </p>

    <p>See also the <a href="https://github.com/UCL/STIR/milestone/3">GitHub milestone for v4.1</a></p>

<h2>Patch release info</h2>
<ul>
  <li> 4.1.0 released 02/05/2021</li>
</ul>

<h2> Summary for end users (also to be read by developers)</h2>

<h3>License change</h3>
    <p>The license used to distribute STIR has now changed! As opposed to the LPGL and/or GPL license, almost all modifications
      and additions since version 0.92 in 2001 are now licensed under the
      <a href="https://www.apache.org/licenses/LICENSE-2.0">Apache 2.0 license</a>. This is a more permissive license
      than both LGPL and GPL. Please note that older files are still covered by the <a href="http://stir.sourceforge.net/registration/PARAPETlicense.htm">PARAPET license</a>, which is permissive as well.</p>
    <p>Unfortunately there is one exception: updates since PARAPET to the FourierRebinning.cxx are still licensed under the
      LPGL 2.1 license. Therefore, if you use Fourier Rebinning, you should probably assume that the STIR library is licensed
      under the LPGL-2.1.</p>
    <p>License information is now indicated in the files using <a href="https://spdx.dev/ids/">SPDX identifiers</a>.
      This allows easier automatic checking and is also more compact.</p>
    <p>Some more information is in the distributed <tt>LICENSE.txt</tt>.</p>
    <p>We would like to thank all previous contributors and their institutions who agreed to relicense their work.</p>

<h3>New functionality</h3>
<ul>
  <li>Reading of GE HDF5 data (GE fileformat RDF 9) for the GE Signa PET/MR and recent GE PET/CT scanners (but depending on their
    software version).
    We currently read listmode, sinograms and calibration files (except for the WCC (well-counter calibration) files).
    This code is TOF-ready, but TOF is not enabled pending merge of the TOF Pull Request. Therefore, all reconstructions
    will be non-TOF.<br />
    See examples in <tt>examples/GE-Signa-PETMR</tt> (also applicable for PETCT data).<br />
    <strong>Warning:</strong> currently images will be reconstructed flipped with respect to the standard
    STIR orientation. This is particularly noticeable when output in Nifti/MetaIO etc. See
    <a href="https://github.com/UCL/STIR/issues/675">issue #675</a>.
  </li>
  <li>A new script <tt>create_fdef_from_listmode.sh</tt> that can be used to create a single-time
    frame definition file for a given listmode file.
  <li>
    Addition of the Relative Difference Prior [J. Nuyts, et al., 2002].
  </li>
  <li>NiftyPET's GPU projectors have been wrapped. If NiftyPET is installed, these projectors can be used 
    on data from the Siemens mMR. See the example parameter file in <tt>examples/samples/OSMAPOSL_NiftyPET.par</tt>.
    NiftyPET's GPU-accelerated unlisting has also been wrapped, also allowing for randoms estimation and norm extraction.
  </li>
  <li><tt>estimate_triple_energy_window_scatter_sinogram</tt> can use different width for the upper and lower energy windows</li>
  <li><tt>stir_math</tt> now supports the <tt>--output-format</tt> option for dynamic and parametric images as well. (An example
  file using the <tt>Multi</tt> format is given in the <tt>examples/samples</tt> folder).</li>
  <li>Interfile and ITK image IO now understand some date/time fields. This required a change to our Interfile
    version specification to be able to handle time-zones. These can now be added via the same suffix as used by DICOM, e.g.
    <tt>10:01:01.00+0130</tt>.<br />
    <strong>Warning:</strong> If the time-zone is not specified, we assume it's in the current time-zone without DST. This is dangerous,
    but allows us to subtract time-fields.</li>
  <li>Added a utility <tt>list_lm_info</tt>.</li>
  <li>Implementation of <tt>a*x+b*y</tt> methods <code>xapyb</code> and <code>sapyb</code> where <tt>a</tt> and <tt>b</tt> can be scalar or vector types.</li>
  <li>The <code>LmToProjData</code> hierarchy has a new member function <code>set_up()</code>, and more <code>set_*</code>
    functions, such that it can be used without parsing. Note that it will be automatically called when parsing
    (which might change in the future).
    </li>
</ul>

<h3>Deprecated functionality</h3>
Support for the following will be removed in the next version:
<ul>
  <li>ECAT6 and VOLPET files</li>
  <li>bitmap display using X Windows </li>
</ul>

<h3>Changed functionality</h3>
<ul>
  <li>Modification of log-likelihood computation to use more doubles, improving numerical stability, see <a href="https://github.com/UCL/STIR/pull/528">PR 528</a>.</li>
  <li>Reconstruction algorithms perform now more checks during <code>set_up()</code> etc.
    However, this means that <strong>you have to call <code>set_up()</code> also for analytic
    reconstruction algorithms</strong>. (This was already documented, but not yet enforced).
  </li>
  <li>copy energy information from the template in the <tt>forward_project</tt> utility.
  </li>
  <li>PET scatter improvements:
    <ul>
    <li>the scatter estimation parsing now prefers specifying normalisation and attenuation via two separate
      keywords (as opposed to via a chained bin normalisation),
      (keyword <tt>normalisation type</tt>) and
      the attenuation factors. Check the updated sample file.
      The old parsing keyword <tt>Bin normalisation type</tt> will still work but is deprecated
      and will be removed in a future version.
    </li>
    <li>scatter estimation uses now more defaults such that you need to have less files.</li>
    <li><code>ScatterEstimation</code> has now many more <code>set*</code> functions such that most
      (all?) parameters can be set from C++/Python (i.e. without parsing).
    </li>
    </ul>
  </li>
  <li>The <code>SinglesRates</code> hierarchy has been revised.

    The <code>SinglesRates</code> classes assumed that stored singles were rates but in practice
    were totals-per-time-interval (for both ECAT7 and RDF9). It is convenient
    to be able to access totals and rates, so <code>SinglesRates</code> has now
    <code>get_singles</code> (returning the singles in the time interval) and
    <code>get_singles_rate</code> (returning the rate per second).
    See <a href="https://github.com/UCL/STIR/issues/615">#615</a> for more information.

    Due to the previous confusion, "client"-code will need to be adapted to use
    either <code>get_singles</code> or <code>get_singles_rate</code>, depending on what is needed.<br />
    <strong>WARNING</strong> Previous results on ECAT7 dead-time correction using sinograms as singles-info might have been incorrect therefore.<br />

    <strong>WARNING</strong> We no longer have the capability to test ECAT7 normalisation.
    Therefore, the dead-time correction code might still not be correct (due to a scale factor).
  </li>

</ul>
<h4>Python (and MATLAB) interface</h4>
none

<h4>Other</h4>
<ul>
  <li>moved <tt>examples/src</tt> to <tt>examples/C++/src</tt></li>
  <li>
    <tt>examples</tt> and <tt>documentation</tt> are now installed, together with doxygen files (if built)
    into <tt>CMAKE_INSTALL_PREFIX/share/doc/stir-majorversion.minorversion</tt>.
  </li>
</ul>

<h3>Known problems</h3>
<p>See the Github issues for more information.</p>
<ul>
 <li>currently images reconstructed using the GE RDF9 functionality will be reconstructed flipped
   and slightly rotated, causing problems with attenuation alignment for instance.
  <a href="https://github.com/UCL/STIR/issues/675">issue #675</a>.
 </li>
  <li>SPECT related
 <ul>
 <li> Do NOT use current PET projectors on SPECT Data. You will have to choose the "SPECT UB" projector 
    in all cases (see the sample .par files).</li>
 <li>The quantitative scale of reconstructed SPECT images is generally different than for PET reconstructions.
    It probably also behaves differently than the PET projectors when using different voxel sizes.</li>
 <li>Images are still written as PET Interfile (but this is ignored when reading).</li>
 <li>At present, the collimator model varies the width of the PSF linearly with distance. This was
   experimentally verified with some collimators (for normal distances to the collimator).
   However, we need to add the possibility to use different models.
  </li>
  <li><tt>list_projdata_info</tt> still reports SPECT data as if it's a PET scanner, but you can see
    all necessary geometric info from it anyway.</li>
  <li><tt>create_projdata_template</tt> only works for PET scanners. For SPECT, you could take the 
   sample Interfile header, modify it to your needs (and create an empty file for the binary data pointed to
   by the Interfile header).
  </li>
  </ul>
</li>
<li> data read from GE RDF9 uses wrong conventions, and images will be reconstructed flipped
   with respect to the standard STIR orientation. See
  <a href="https://github.com/UCL/STIR/issues/675">issue #675</a>.
</li>
<li>Building with shared libraries is currently broken on many (all?) systems due to inter-dependencies between libraries.</li>
<li>This release is known to fail when both MPI and shared libraries are enabled. You will see linking errors in all non_MPI executables.</li>
<li>The incremental interpolating back-projector still gives problems in the centre of the images
on some architectures/compiler/optimisation settings. We recommend to use the ray-tracing
matrix (with additional rays) instead.</li>
<li>When using <code>GRAPHICS=X</code> (i.e. on Unix/Linux/MacOSX) the window displaying
the bitmaps is sometimes empty. This might depend on your X server settings.
This affects <tt>manip_image</tt>, <tt>manip_projdata</tt> and <tt>display_projdata</tt>. 
We have currently no work-around (aside from using <code>GRAPHICS=PGM</code> or
<tt>stir_write_pgm</tt>).
</li>
</ul>

<h3>Minor bug fixes</h3>
<ul>
<li>
  Changes to GATE/root cylindrical PET geometry interpretation,
  see <a href="https://github.com/UCL/STIR/pull/569">PR 569</a>.</li>
</li>
<li>
    OpenGATE energy information is MeV. Added a method to convert between MeV to (STIR convention) keV units when
    reading root files.
</li>
</ul>

<h3>Documentation changes</h3>
<ul>
<li>Added documentation on new features and fixed some old doxygen problems.</li> 
 </ul>

<h3>recon_test_pack changes</h3>
<ul>
<li>added a test for scatter estimation</li>
</ul>

<h3>Other changes to tests</h3>
<ul>
    <li>store data in <code>ProjDataInMemory</code> in the same order as what is used by <code>copy_to</code> and <code>fill_from</code>. This enabled using straight-forward copy. (This change should not affect anyone, except if you relied on a specific order in the buffer before.)
    </li>
  <li>C++ tests for consistency of forward projection and reconstruction, executed via <tt>ctest</tt>.
    This is on top of the <tt>recon_test_pack</tt>.
  </li>
</ul>

<h3>Build system</h3>
<ul>
  <li>To enable the functionality for GE HDF5 files, you will need to first install HDF5 libraries. For most operating systems
    this can be done via your package manager which we highly recommend. You could also
    download from the <a href="https://www.hdfgroup.org/downloads/hdf5/">HDF5 group download page</a>.
  </li>
</ul>



<H2>What's new for developers (aside from what should be obvious
from the above):</H2>

<h3>Major bugs fixed</h3>
<ul>
<li>see above</li>
</ul>

<h3>New functionality</h3>
<ul>
  <li>Addition of the <code>randoms_from_singles</code> function.</li>
  <li>Addition of <code>xapyb</code> and <code>sapyb</code> methods for <code>Array</code> and all inherited classes.
      (code>axpby</code> was introduced on the release_4 branch after STIR 4.0 but is now deprecated).</li>
  <li><code>ProjDataInMemory</code> now provides iterators.</li>
  <li>added <code>get_sinograms()</code> and <code>size_all()</code> to <code>ProjDataInfo</code></li>
  <li>added functions for date-time processing</li>
  <li>added <code>ExamInfo.set_energy_information_from</code></li>
</ul>
  
<h3>Other code changes</h3>
<p>See the ChangeLog, specific items:</p>
<ul>
  <li><code>ScatterEstimation</code> now requires calling <code>set_up()</code> explicitly.</li>
</ul>


</body>

</html>
