OSMAPOSLParameters :=
; example file for using a quadratic prior (with One Step Late and subsets)

objective function type:= PoissonLogLikelihoodWithLinearModelForMeanAndProjData
PoissonLogLikelihoodWithLinearModelForMeanAndProjData Parameters:=

input file :=  test_generic_implementation_f1g1d0b0.hs
	       
; next keywords can be used to specify image size, but will be removed
; they are ignored when using an initial image
zoom := 1
; use --1 for default sizes that cover the whole field of view
;XY output image size (in pixels) := 61

; if disabled, defaults to maximum segment number in the file
maximum absolute segment number to process := 1
; see User's Guide to see when you need this
zero end planes of segment 0:= 1

recompute sensitivity := 1
use subset sensitivities:=1 ; recommended
; optional filename to store/read the sensitivity image
; (if use subset sensitivity is off)

; optional filename to store/read the subsensitivities
; use %d where you want the subset-number (a la printf)
subset sensitivity filenames:= sens_%d.hv

; if the next parameter is disabled,
; the sensitivity will be computed
sensitivity filename:= sens.hv
; specify additive projection data to handle randoms or so
; see User's Guide for more info
additive sinogram := 0


; here comes the prior stuff

prior type := quadratic
  Quadratic Prior Parameters:=
  penalisation factor := 5
  ; next defaults to 0, set to 1 for 2D inverse Euclidean weights, 0 for 3D
  only 2D:= 0
  ; next can be used to set weights explicitly. Needs to be a 3D array (of floats).
  ; value of only_2D is ignored
  ; following example uses 2D 'nearest neighbour' penalty
  ; weights:={{{0,1,0},{1,0,1},{0,1,0}}}
  ; use next parameter to specify an image with penalisation factors (a la Fessler)
  ; see class documentation for more info
  ; kappa filename:=
  ; use next parameter to get gradient images at every subiteration
  ; see class documentation
  gradient filename prefix:=
  END Quadratic Prior Parameters:=

projector pair type := Matrix
  Projector Pair Using Matrix Parameters :=
  Matrix type := Ray Tracing
  Ray tracing matrix parameters :=
   ; use multiple (almost) parallel LORs for every bin in the sinogram
   ; to avoid discretisation artefacts
   number of rays in tangential direction to trace for each bin:=5
   ; you could disable some symmetries if you have enough memory
   ; this would for instance allow you to increase the number of subsets
   do_symmetry_90degrees_min_phi:=0
   do_symmetry_180degrees_min_phi:=0
   do_symmetry_swap_segment:=0
   do_symmetry_swap_s:=0
   do_symmetry_shift_z:= 0
   disable caching:= 1
  End Ray tracing matrix parameters :=
  End Projector Pair Using Matrix Parameters :=


end PoissonLogLikelihoodWithLinearModelForMeanAndProjData Parameters:=

;initial estimate:=
; enable this when you read an initial estimate with negative data
enforce initial positivity condition:=1

output filename prefix := test_OSMAPOSL
number of subsets:= 6 
number of subiterations:= 6
save estimates at subiteration intervals:= 3

; enable this for multiplicative form of OSMAPOSL (see User's Guide)
;MAP model := multiplicative

post-filter type := None

END :=
