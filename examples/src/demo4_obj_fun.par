OSMAPOSLParameters :=
; example file for using a quadratic prior (with One Step Late and subsets)
; this is a minimal file. check other sample files and doc for more options

objective function type:= PoissonLogLikelihoodWithLinearModelForMeanAndProjData
PoissonLogLikelihoodWithLinearModelForMeanAndProjData Parameters:=

input file := test.hs
; if disabled, defaults to maximum segment number in the file
maximum absolute segment number to process := 4
; see User's Guide to see when you need this
zero end planes of segment 0:= 1

; if the next parameter is disabled, 
; the sensitivity will be computed
; use %d where you want the subset-number (a la printf)
subset sensitivity filenames:= sens_%d.hv
; specify additive projection data to handle randoms or so
; see User's Guide for more info
additive sinogram := 0


; here comes the prior stuff

prior type := quadratic
  Quadratic Prior Parameters:=
  penalisation factor := 1
  ; next defaults to 0, set to 1 for 2D inverse Euclidean weights, 0 for 3D 
  only 2D:= 0
  ; next can be used to set weights explicitly. Needs to be a 3D array (of floats).
  ' value of only_2D is ignored
  ; following example uses 2D 'nearest neighbour' penalty
  ; weights:={{{0,1,0},{1,0,1},{0,1,0}}}
  ; use next parameter to specify an image with penalisation factors (a la Fessler)
  ; see class documentation for more info
  ; kappa filename:=
  ; use next parameter to get gradient images at every subiteration
  ; see class documentation
  gradient filename prefix:= 
  END Quadratic Prior Parameters:=

end PoissonLogLikelihoodWithLinearModelForMeanAndProjData Parameters:=

initial estimate:= some_image
; enable this when you read an initial estimate with negative data
enforce initial positivity condition:=0

output filename prefix := test_QP
number of subsets:= 12
number of subiterations:= 24
save estimates at subiteration intervals:= 12

; This is the default verbosity, just putting it here as an example
; lower value means less output, 0 being the minimum
verbosity := 2

; enable this for multiplicative form of OSMAPOSL (see User's Guide)
;MAP model := multiplicative

END :=
